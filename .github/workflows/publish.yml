name: Publish

on:
  push:
    tags:
    - "v*"

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        platform: [x64, x86, arm64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: PocketClient.sln                     # Replace with your solution name, i.e. App1.sln.
      Package_Name: PocketClient_Desktop
      Package_Raw_Name: PocketClient.Desktop

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Create the app by building and publishing the project
    - name: Create the app
      run: msbuild $env:Solution_Name /t:${env:Package_Name}:Publish /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:GenerateAppxPackageOnBuild=true
      env:
        Configuration: ${{ matrix.configuration }}
        Platform: ${{ matrix.platform }}

    # Upload the app
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.Package_Raw_Name }}/bin/**/*.msix
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
